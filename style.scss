* {
  margin: 0;
  font-family: sans-serif;
}
body {
  background-color: #e8e8e8;
}
.topBar {
  z-index: 100;
  position: fixed;
  background-color: white;
  box-shadow: 0px 0px 6px rgb(106, 106, 106);
  width: 100vw;
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
  place-items: center;
  padding: 0.5rem 0;
  h5 {
    border: 1px solid rgb(192, 192, 192);
    padding: 0.5rem;
    border-radius: 10px;
  }
}
.libraryLogo {
  display: grid;
  grid-template-columns: 1fr 1fr;
  place-items: center;
  width: 6.6rem;
}
.topRightBar {
  display: grid;
  grid-template-columns: 2fr 1fr;
  place-items: center;
  width: 7rem;
}
#addBook {
  cursor: pointer;
}
.sideBar {
  z-index: 80;
  position: fixed;
  bottom: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.4);
  height: 95vh;
  width: 0;
  -webkit-backdrop-filter: blur(4px);
  -o-backdrop-filter: blur(4px);
  -moz-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  backdrop-filter: blur(5px);
  transition: 0.5s;
  display: grid;
  grid-template-columns: auto 300px auto;
  grid-template-rows: auto 450px auto;
  .formContainer {
    padding: 2rem 0;
    grid-column: 2/3;
    grid-row: 2/3;
    background-color: rgba(0, 0, 0, 0.841);
    color: white;
    border-radius: 15px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    h2 {
      margin-bottom: 2rem;
      font-weight: 400;
      letter-spacing: 1px;
    }
    button {
      border: 0;
      background-color: #fff;
      padding: 0.5rem 3rem;
      font-size: 1rem;
      letter-spacing: 1px;
      border-radius: 5px;
      cursor: pointer;
    }
    // code below creates custom checkbox!
    .checkContainer {
      display: flex;
      align-items: center;
      margin-bottom: 2rem;
    }
    .checkboxContainer {
      display: block;
      position: relative;
      padding-left: 35px;
      margin-bottom: 12px;
      cursor: pointer;
      font-size: 22px;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }
    .checkboxContainer input {
      z-index: 2;
      position: absolute;
      opacity: 0;
      cursor: pointer;
      height: 30px;
      width: 80%;
      left: 0;
      top: -10px;
    }
    .checkmark {
      position: absolute;
      top: -5px;
      left: 0;
      height: 20px;
      width: 20px;
      background-color: rgba(0, 0, 0, 0);
      border: 1px solid white;
      border-radius: 1px;
    }
    .checkmark:after {
      content: "";
      position: absolute;
      display: none;
    }
    .checkboxContainer input:checked ~ .checkmark:after {
      display: block;
    }
    .checkboxContainer .checkmark:after {
      left: 6px;
      top: 2px;
      width: 5px;
      height: 10px;
      border: solid white;
      border-width: 0 3px 3px 0;
      -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
      transform: rotate(45deg);
    }
    .read {
      font-size: 1em;
      color: rgb(199, 199, 199);
      padding: 10px;
      text-transform: uppercase;
      letter-spacing: 0.1em;
      font-weight: 100;
    }
    // code below makes label pop from input to top of it
    .inputContainer {
      position: relative;
      input {
        border: 0;
        border-bottom: 1px solid black;
        outline: none;
        background-color: rgba(0, 0, 0, 0);
        color: white;
        padding: 8px;
        width: 12rem;
        margin-bottom: 2rem;
      }
      label {
        position: absolute;
        left: 0;
        top: 0;
        font-size: 12px;
        color: rgb(199, 199, 199);
        padding: 10px;
        text-transform: uppercase;
        letter-spacing: 0.1em;
        font-weight: 100;
        cursor: text;
        transition: all 0.4s;
      }
      input:focus + label,
      input:valid + label {
        color: black;
        background-color: #fff;
        padding: 2px;
        border-radius: 2px;
        font-size: 0.7em;
        top: -10px;
        left: 3px;
        pointer-events: none;
        transition: all 0.4s;
      }
      input:focus,
      input:valid {
        border: 1px solid white;
        border-radius: 4px;
      }
    }
  }
}
.main {
  height: 100%;
  padding: 5rem 1rem 0 1rem;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  grid-template-rows: repeat(4, 350px);
  gap: 2rem;
}
.exampleCard {
  background-color: #fff;
  box-shadow: 2px 4px 12px rgba(189, 189, 189, 0.45);
  border-radius: 20px;
  padding: 2rem;
  display: grid;
  gap: 1rem;
  h2 {
    font-weight: 400;
    letter-spacing: 1px;
    align-self: self-end;
  }
  p {
    letter-spacing: 1px;
  }
  .progress {
    display: flex;
    justify-content: space-between;
  }
  .readBtn {
    border: 0;
    text-transform: uppercase;
    color: white;
    font-weight: 700;
    letter-spacing: 2px;
    background-color: #b4ccba;
    text-shadow: 1px 3px 5px rgb(105, 105, 105);
    border-radius: 15px;
    transition: 0.5s;
  }
  .unreadBtn {
    @extend .deleteBtn;
  }
  .readBtn:hover,
  .unreadBtn:hover,
  .deleteBtn:hover {
    transition: 0.2s;
    scale: 1.1;
    cursor: pointer;
  }
  .deleteBtn {
    border: 0;
    text-transform: uppercase;
    color: white;
    font-weight: 700;
    letter-spacing: 2px;
    background-color: #ccb4b4;
    text-shadow: 1px 3px 5px rgb(105, 105, 105);
    border-radius: 15px;
    transition: 0.5s;
  }
}
.popUpContainer {
  position: fixed;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 90vh;
  width: 100vw;
  opacity: 1;
  transition: 0.5s;
}
.firstPopUp {
  transition: 0.5s;
  opacity: 1;
  background-color: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 5rem;
  padding: 10px;
  width: 32rem;
  border-radius: 20px;
  box-shadow: 2px 4px 12px rgba(189, 189, 189, 0.45);
  animation: popUpBounce 0.8s infinite alternate;
  h3 {
    font-weight: 100;
    text-align: center;
    letter-spacing: -1px;
  }
}
.blurOut {
  animation-name: blurOut;
  animation-duration: 1s;
}

@keyframes popUpBounce {
  to {
    transform: translate3d(0, 16px, 0);
  }
}
@keyframes blurOut {
  from {
    filter: blur(0);
    scale: 1;
  }
  to {
    filter: blur(4px);
    scale: 2;
  }
}
// @media (max-width: 600px) {
//   .sideBar {
//     width: 400px;
//   }
// }
@media (max-width: 400px) {
  .sideBar {
    grid-template-columns: none;
    grid-template-rows: none;
  }
}
